{
   "post common" : {
      "prefix" : [
         "from my_src import *"
      ],
      "replace" : {
         "num2str" : "str",
         "length"  : "len"
      }
   },
   "post rename" : {
      "prefix" : [
         "from __future__ import division",
         "from pylab import * # https://stsievert.com/blog/2015/09/01/matlab-to-python/"
      ],
      "replace" : {
         "||"     : "or",
         "&&"     : "and",
         "~="     : "!=",
         "elseif" : "elif",
         "else"   : "else:",
         "end"    : "#end",
         "true"   : "True",
         "false"  : "False"
      },
      "multi-line-regex" : {
         ";$"                : "",
         "%"                 : "#",
         "\\s*\\.\\.\\.\\s*" : " "
      },
      "single-line-regex" : {
         "=([^'\\s=,(]+):([^'\\s]+)"                        : "=range({0}, {1} + 1)",
         "for ([a-zA-Z0-9_]+)=(.+)"                         : "for {0} in {1}:",
         "if (.+)"                                          : "if {0}:",
         "while (.+)"                                       : "while {0}:",
         "@\\(([^)]+)\\)"                                   : "lambda {0}:",
         "zeros(\\([A-Za-z0-9_]+\\s*,\\s*[A-Za-z0-9_]+\\))" : "zeros({0})",
         "ones(\\([A-Za-z0-9_]+\\s*,\\s*[A-Za-z0-9_]+\\))"  : "ones({0})",
         "\\[([^;\\s]+)\\s*;\\s*([^\\s\\]]+)\\]"            : "array([[ {0} ],[ {1} ]])",
         "\\[([^,'\\s]+)[\\s]+([^'\\s\\]]+)\\]"             : "array([ {0}, {1} ])",
         "(=\\s*)\\[(.+)\\]$"                               : "{0}array([ {1} ])",
         "(=\\s*)\\[\\]"                                    : "{0}array([])",
         ";"                                                : "",
         "\\((:,[^)]+)\\)"                                  : "[{0}]",
         "\\(([^)]+,:)\\)"                                  : "[{0}]",
         "\\{([^}]+)\\}"                                    : "[{0}]",
         "([^.])\\*"                                        : "{0}@",
         "\\.\\*"                                           : "*",
         "^([^']+)'([^']+)$"                                : "{0}.T{1}"
      },
      "fix-functions" : "true"
   },
   "post smop" : {
      "replace" : {
         "    "          : "   ",
         "libsmop"       : "smop.libsmop",
         "disp(concat("  : "disp(''.join(",
         "error(concat(" : "error(''.join(",
         "concat(['"     : "''.join(['",
         "concat("       : "my_concat(",
         "disp"          : "my_disp",
         "sort("         : "my_sort(",
         "norm("         : "my_norm("
      },
      "single-line-regex" : {
         ",nargout=[0-9]+" : ""
      }
   }
}